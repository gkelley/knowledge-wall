{"version":3,"sources":["components/Commitment/Commitment.module.css","hoc/KioskLayout/KioskLayout.tsx","components/shared/FormikTextFIeld.tsx","axios-firebase.tsx","models/models.ts","components/NewBiteForm/NewBiteForm.tsx","pages/Kiosk/KioskHome/styles.ts","components/NewCommitmentForm/NewCommitmentForm.tsx","pages/Kiosk/KioskHome/KioskHome.tsx","hoc/DashboardLayout/DashboardLayout.tsx","utilities/colorManipulator.tsx","components/Commitment/Commitment.tsx","components/Bites/Bite/Bite.tsx","components/Bites/Bites.tsx","pages/Dashboard/KnowledgeWall/KnowledgeWall.tsx","App.tsx","serviceWorker.ts","index.tsx","hoc/DashboardLayout/DashboardLayout.module.css","components/Bites/Bite/Bite.module.css"],"names":["module","exports","card","cardContent","KioskLayout","react_default","a","createElement","Fragment","index_es","position","color","className","classes","menuButton","react_router_dom","to","src","variant","grow","this","props","children","Component","MaterialInput","_ref","fields","Object","esm_extends","field","_ref$form","form","touched","errors","objectWithoutProperties","TextField_default","assign","error","Boolean","name","helperText","firebaseInstance","axios","create","baseURL","GetAllBites","_GetAllBites","apply","arguments","_callee","regenerator_default","wrap","_context","prev","next","get","then","response","keys","data","map","i","id","biteData","catch","reason","console","log","abrupt","sent","stop","_callee2","formData","_context2","post","_callee3","postId","_context3","patch","biteStatus","commitmentStatus","biteTypes","displayName","formatTypes","image","ValidationSchema","Yup","shape","title","required","max","description","type","author","NewBiteForm","handleSubmit","values","_x","_PostBite","PostBite","dateCreated","Date","upvotes","commitment","status","Active","_this","handleClose","_this2","biteTypeOptions","index","value","open","onClose","formik_esm","initialValues","validationSchema","onSubmit","render","label","component","FormikTextField","fullWidth","margin","multiline","rowsMax","select","onClick","styles","button","borderRadius","border","padding","boxShadow","fontSize","gridContainer","biteId","format","NewCommitmentForm","state","bites","_x2","_x3","_PatchCommitment","PatchCommitment","expectedDate","undefined","Incomplete","setState","_this3","_this4","formatTypeOptions","postOptions","bite","KioskHome","learnFormOpen","teachFormOpen","handleLearnOpen","handleLearnClose","handleTeachOpen","handleTeachClose","hoc_KioskLayout_KioskLayout","container","spacing","item","xs","align","gutterBottom","components_NewBiteForm_NewBiteForm","components_NewCommitmentForm_NewCommitmentForm","withStyles","DashboardLayout","aria-label","contentContainer","LightenDarkenColor","col","amt","usePound","slice","num","parseInt","r","b","g","toString","Commitment","style","backgroundColor","subheader","avatar","Bite","action","cardBackground","components_Commitment_Commitment","upvoteContainer","upvoteButton","icons_index_es","Bites","sortedBites","sort","biteA","biteB","biteACommitment","biteBCommitment","sortBites","length","key","Bites_Bite_Bite","KnowledgeWall","hoc_DashboardLayout_DashboardLayout","components_Bites_Bites","App","basename","react_router","path","exact","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","root","upvoteText"],"mappings":"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","file":"static/js/main.722ca08f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Commitment_card__Ic6wP\",\"cardContent\":\"Commitment_cardContent__3dLmV\"};","import React, { Component } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport classes from \"./KioskLayout.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass KioskLayout extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Toolbar>\r\n            <IconButton\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n            >\r\n            <Link to=\"/dashboard\">\r\n              <Avatar src=\"https://media.licdn.com/dms/image/C4E0BAQEzidOHxvXPRQ/company-logo_200_200/0?e=2159024400&v=beta&t=REo20Yxby9OchMNIFNGiBQGNjMUUiGpg2XnqukMmkpk\" />\r\n            </Link>\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              Knowledge Wall\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {this.props.children}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KioskLayout;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst MaterialInput = ({\r\n  field: { ...fields },\r\n  form: { touched, errors },\r\n  ...props\r\n}: any) => {\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...fields}\r\n      error={Boolean(touched[fields.name] && errors[fields.name])}\r\n      helperText={touched[fields.name] && errors[fields.name]}\r\n    >\r\n      {props.children}\r\n    </TextField>\r\n  );\r\n};\r\n\r\nexport default MaterialInput;\r\n","import axios from \"axios\";\r\nimport { biteData, commitment } from \"./models/models\";\r\n\r\nconst firebaseInstance = axios.create({\r\n  baseURL: \"https://knowledge-wall-2019.firebaseio.com/\"\r\n});\r\n\r\nexport async function GetAllBites() {\r\n  return await firebaseInstance\r\n    .get(\"/bites.json\")\r\n    .then(response => {\r\n      return Object.keys(response.data).map(function(i) {\r\n        return { id: i, biteData: response.data[i] };\r\n      });\r\n    })\r\n    .catch((reason: any) => {\r\n      console.log(reason);\r\n      return [];\r\n    });\r\n}\r\n\r\nexport async function PostBite(formData: biteData) {\r\n  return await firebaseInstance\r\n    .post(\"/bites.json\", formData)\r\n    .then(response => {\r\n      return true;\r\n    })\r\n    .catch((reason: any) => {\r\n      //Todo\r\n      console.log(reason);\r\n      return false;\r\n    });\r\n}\r\n\r\nexport async function PatchCommitment(formData:  {commitment: commitment}, postId: string) {\r\n  return await firebaseInstance\r\n    .patch(\"/bites/\" + postId + \".json\", formData)\r\n    .then(response => {\r\n      return true;\r\n    })\r\n    .catch((reason: any) => {\r\n      //Todo\r\n      console.log(reason);\r\n      return false;\r\n    });\r\n}\r\n\r\nexport default firebaseInstance;\r\n","export type bite = {\r\n  id: string;\r\n  biteData: biteData;\r\n};\r\n\r\nexport type biteData = {\r\n  title: string;\r\n  description: string;\r\n  // biteTypes Id Number\r\n  type: number;\r\n  upvotes: number;\r\n  dateCreated: Date;\r\n  author: string;\r\n  commitment: commitment | null;\r\n  status: biteStatus;\r\n};\r\n\r\nexport enum biteStatus {\r\n  Active,\r\n  Inactive\r\n}\r\n\r\nexport const biteTypes = [\r\n  {\r\n    displayName: \"Web\",\r\n    color: \"#ACE9DB\"\r\n  },\r\n  {\r\n    displayName: \"Mobile\",\r\n    color: \"#abc2e8\"\r\n  },\r\n  {\r\n    displayName: \"Entrepreneurship\",\r\n    color: \"#B3D4EB\"\r\n  },\r\n  {\r\n    displayName: \"CMS\",\r\n    color: \"#FDDDAA\"\r\n  },\r\n  {\r\n    displayName: \"RP\",\r\n    color: \"#EBBAB4\"\r\n  },\r\n  {\r\n    displayName: \"Sharepoint\",\r\n    color: \"#DBBDE5\"\r\n  },\r\n  {\r\n    displayName: \"Other\",\r\n    color: \"#f49ac2\"\r\n  }\r\n];\r\n\r\nexport const formatTypes = [\r\n  {\r\n    displayName: \"BFF\",\r\n    image: \"https://img.icons8.com/color/48/000000/critical-thinking.png\",\r\n  },\r\n  {\r\n    displayName: \"Lightning Talk\",\r\n    image: \"https://img.icons8.com/ultraviolet/40/000000/conflict.png\"\r\n  },\r\n  {\r\n    displayName: \"Dev Breakfast\",\r\n    image: \"https://img.icons8.com/dusk/64/000000/restaurant.png\"\r\n  },\r\n  {\r\n    displayName: \"Blog Post\",\r\n    image: \"https://img.icons8.com/dusk/64/000000/google-blog-search.png\"\r\n  },\r\n  {\r\n    displayName: \"Seminar\",\r\n    image: \"https://img.icons8.com/ios/50/000000/conference-filled.png\"\r\n  },\r\n  {\r\n    displayName: \"Other\",\r\n    image: \"https://img.icons8.com/ios/50/000000/online-group-studying.png\"\r\n  },\r\n];\r\n\r\nexport type commitment = {\r\n  author: string;\r\n  description: string;\r\n  // formatTypes Id Number\r\n  format: number;\r\n  dateCreated: Date;\r\n  expectedDate?: Date;\r\n  status: commitmentStatus;\r\n};\r\n\r\nexport enum commitmentStatus {\r\n  Incomplete,\r\n  Complete\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Formik, Field } from \"formik\";\r\nimport FormikTextField from \"../shared/FormikTextFIeld\";\r\nimport firebaseInstance, { PostBite } from \"../../axios-firebase\";\r\nimport { biteData, biteStatus, biteTypes } from \"../../models/models\";\r\n\r\nconst ValidationSchema = Yup.object().shape({\r\n  title: Yup.string()\r\n    .required(\"Title is required\")\r\n    .max(50, \"50 character max\"),\r\n  description: Yup.string()\r\n    .required(\"Description is required\")\r\n    .max(255, \"255 character max\"),\r\n  type: Yup.number().required(\"Learning Category is required\"),\r\n  author: Yup.string().max(50, \"50 character max\")\r\n});\r\ninterface NewBiteFormProps {\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nclass NewBiteForm extends Component<NewBiteFormProps> {\r\n  handleSubmit = (values: any) => {\r\n    let formData : biteData = {\r\n        title: values.title,\r\n        description: values.description,\r\n        author: values.author,\r\n        dateCreated: new Date(),\r\n        type: values.type,\r\n        upvotes: 0,\r\n        commitment: null,\r\n        status: biteStatus.Active,\r\n    }\r\n\r\n    PostBite(formData).then(response => {\r\n      this.props.handleClose();\r\n    });\r\n    \r\n  };\r\n\r\n  render() {\r\n    const biteTypeOptions = biteTypes.map((type, index) => (<option value={index}>{type.displayName}</option>) );\r\n    return (\r\n      <Dialog open={this.props.open} onClose={this.props.handleClose}>\r\n        <DialogTitle>Create \"Knowledge Bite\"</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Post a \"Bite\" of information that you want to learn!\r\n          </DialogContentText>\r\n          <Formik\r\n            initialValues={{\r\n              title: \"\",\r\n              description: \"\",\r\n              type: 0,\r\n              author: \"\"\r\n            }}\r\n            validationSchema={ValidationSchema}\r\n            onSubmit={values => {\r\n              this.handleSubmit(values);\r\n            }}\r\n            render={props => (\r\n              <Form>\r\n                <Field\r\n                  name=\"title\"\r\n                  label=\"Topic\"\r\n                  component={FormikTextField}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\" \r\n                />\r\n                <Field\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  component={FormikTextField}\r\n                  multiline\r\n                  rowsMax=\"4\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\" \r\n                />\r\n                <Field \r\n                 name=\"type\"\r\n                 label=\"Category\" \r\n                 select=\"true\" \r\n                 variant=\"outlined\" \r\n                 margin=\"normal\" \r\n                 component={FormikTextField}\r\n                >\r\n                  {biteTypeOptions}\r\n                </Field>\r\n                <Field\r\n                  name=\"author\"\r\n                  label=\"Name (Optional)\"\r\n                  component={FormikTextField}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\" \r\n                />\r\n                <DialogActions>\r\n                  <Button onClick={this.props.handleClose}>Cancel</Button>\r\n                  <Button type=\"submit\">Post</Button>\r\n                </DialogActions>\r\n              </Form>\r\n            )}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewBiteForm;\r\n","\r\nconst styles = {\r\n    button: {\r\n        // background: 'linear-gradient(45deg, #ace9db 30%, #7488fc 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        // color: 'white',\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px #c1ccc9',\r\n        fontSize: \"3vw\"\r\n    }, \r\n    gridContainer: {\r\n        padding: '50px'\r\n    }\r\n  };\r\n\r\nexport default styles;","import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Formik, Field } from \"formik\";\r\nimport FormikTextField from \"../shared/FormikTextFIeld\";\r\nimport firebaseInstance, { GetAllBites, PatchCommitment } from \"../../axios-firebase\";\r\nimport { commitment, commitmentStatus, formatTypes, bite } from \"../../models/models\";\r\n\r\nconst ValidationSchema = Yup.object().shape({\r\n  biteId: Yup.string()\r\n  .required(\"Topic is required\"),\r\n  author: Yup.string()\r\n  .required(\"Name is required\")\r\n  .max(50, \"50 character max\"),\r\n  description: Yup.string()\r\n    .required(\"Description is required\")\r\n    .max(255, \"255 character max\"),\r\n  format: Yup.number().required(\"Format is required\"),\r\n});\r\ninterface NewCommitmentFormProps {\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\ninterface NewCommitmentState {\r\n  bites: bite[];\r\n}\r\n\r\nclass NewCommitmentForm extends Component<NewCommitmentFormProps, NewCommitmentState> {\r\n\r\n  state : NewCommitmentState = {\r\n    bites: [],\r\n  }\r\n\r\n  \r\n  componentDidMount() {\r\n    GetAllBites().then(response =>{\r\n      this.setState({\"bites\": response});\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    GetAllBites().then(response =>{\r\n      this.setState({\"bites\": response});\r\n    });\r\n  }\r\n\r\n  handleSubmit = (values: any) => {\r\n    let formData : {commitment: commitment} = {\r\n        commitment:{\r\n            author: values.author,\r\n            description: values.description,\r\n            format: values.format,\r\n            dateCreated: new Date(),\r\n            expectedDate: undefined,\r\n            status: commitmentStatus.Incomplete \r\n        }\r\n    }\r\n    PatchCommitment(formData, values.biteId).then(() => {\r\n      this.props.handleClose();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const formatTypeOptions = formatTypes.map((type, index) => (<option value={index}>{type.displayName}</option>) );\r\n    const postOptions = this.state.bites.map((bite) => (<option value={bite.id}>{bite.biteData.title}</option>) );\r\n    return (\r\n      <Dialog open={this.props.open} onClose={this.props.handleClose}>\r\n        <DialogTitle>Commit to teaching a \"Knowledge Bite\"</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Teach your colleagues in what ever format you want.\r\n          </DialogContentText>\r\n          <Formik\r\n            initialValues={{\r\n              biteId: \"\",\r\n              author: \"\",\r\n              description: \"\",\r\n              format: 0,\r\n            }}\r\n            validationSchema={ValidationSchema}\r\n            onSubmit={values => {\r\n              this.handleSubmit(values);\r\n            }}\r\n            render={props => (\r\n              <Form>\r\n                <Field \r\n                  label=\"Topic\" \r\n                  select=\"true\" \r\n                  variant=\"outlined\" \r\n                  name=\"biteId\" \r\n                  margin=\"normal\" \r\n                  fullWidth\r\n                  component={FormikTextField} \r\n                >\r\n                  {postOptions}\r\n                </Field>\r\n                 <Field\r\n                  name=\"author\"\r\n                  label=\"Name\"\r\n                  component={FormikTextField}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\" \r\n                />\r\n                <Field\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  component={FormikTextField}\r\n                  fullWidth\r\n                  multiline\r\n                  rowsMax=\"4\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\" \r\n                />\r\n                <Field \r\n                  label=\"Format\" \r\n                  select=\"true\" \r\n                  variant=\"outlined\" \r\n                  margin=\"normal\" \r\n                  name=\"format\" \r\n                  component={FormikTextField}\r\n                >\r\n                  {formatTypeOptions}\r\n                </Field>\r\n                <DialogActions>\r\n                  <Button onClick={this.props.handleClose}>Cancel</Button>\r\n                  <Button type=\"submit\">Post</Button>\r\n                </DialogActions>\r\n              </Form>\r\n            )}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCommitmentForm;\r\n","import React, { Component } from \"react\";\r\nimport KioskLayout from \"../../../hoc/KioskLayout/KioskLayout\";\r\nimport NewBiteForm from \"../../../components/NewBiteForm/NewBiteForm\";\r\nimport { Button, Grid, Typography, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport styles from \"./styles\";\r\nimport NewCommitmentForm from \"../../../components/NewCommitmentForm/NewCommitmentForm\";\r\n\r\n\r\ninterface MyProps extends WithStyles {}\r\ninterface KioskHomeState {\r\n  learnFormOpen: boolean,\r\n  teachFormOpen: boolean,\r\n}\r\nclass KioskHome extends Component<MyProps, KioskHomeState> {\r\n\r\n  state: KioskHomeState = {\r\n    learnFormOpen: false,\r\n    teachFormOpen: false,\r\n  }\r\n\r\n  handleLearnOpen = () => {\r\n    this.setState({ learnFormOpen: true });\r\n  };\r\n  handleLearnClose = () => {\r\n    this.setState({ learnFormOpen: false });\r\n  };\r\n\r\n  handleTeachOpen = () => {\r\n    this.setState({ teachFormOpen: true });\r\n  };\r\n  handleTeachClose = () => {\r\n    this.setState({ teachFormOpen: false });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <KioskLayout>\r\n        <Grid className={this.props.classes.gridContainer} container spacing={40}>\r\n          <Grid item xs={12}>\r\n            <Typography align=\"center\" variant=\"h2\" gutterBottom>\r\n              Knowledge Wall\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h5\">\r\n              What are you looking to do today?\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3} />\r\n          <Grid item xs={3}>\r\n            <Button onClick={this.handleLearnOpen} fullWidth variant=\"outlined\" className={this.props.classes.button}>\r\n              Learn\r\n            </Button>\r\n            <NewBiteForm open={this.state.learnFormOpen} handleClose={this.handleLearnClose}/>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button onClick={this.handleTeachOpen} fullWidth variant=\"outlined\" className={this.props.classes.button}>\r\n              Teach\r\n            </Button>\r\n            <NewCommitmentForm open={this.state.teachFormOpen} handleClose={this.handleTeachClose}/>\r\n          </Grid>\r\n        </Grid>\r\n      </KioskLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(KioskHome);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Avatar,  \r\n} from \"@material-ui/core\";\r\nimport classes from \"./DashboardLayout.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DashboardLayout extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar position=\"static\" color=\"primary\">\r\n          <Toolbar>\r\n            <IconButton\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"Menu\"\r\n            >\r\n            <Link to=\"/kiosk\">\r\n              <Avatar src=\"https://media.licdn.com/dms/image/C4E0BAQEzidOHxvXPRQ/company-logo_200_200/0?e=2159024400&v=beta&t=REo20Yxby9OchMNIFNGiBQGNjMUUiGpg2XnqukMmkpk\" />\r\n            </Link>\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              Knowledge Wall\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className={classes.contentContainer}>{this.props.children}</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardLayout;\r\n","export const LightenDarkenColor = (col: string, amt: number) => {\r\n    var usePound = false;\r\n  \r\n    if (col[0] === \"#\") {\r\n      col = col.slice(1);\r\n      usePound = true;\r\n    }\r\n  \r\n    var num = parseInt(col, 16);\r\n  \r\n    var r = (num >> 16) + amt;\r\n  \r\n    if (r > 255) r = 255;\r\n    else if (r < 0) r = 0;\r\n  \r\n    var b = ((num >> 8) & 0x00ff) + amt;\r\n  \r\n    if (b > 255) b = 255;\r\n    else if (b < 0) b = 0;\r\n  \r\n    var g = (num & 0x0000ff) + amt;\r\n  \r\n    if (g > 255) g = 255;\r\n    else if (g < 0) g = 0;\r\n  \r\n    return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\r\n  };\r\n  ","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Avatar,\r\n  Typography,\r\n  CardContent\r\n} from \"@material-ui/core\";\r\nimport { formatTypes, commitment } from \"../../models/models\";\r\nimport classes from \"./Commitment.module.css\";\r\nimport { LightenDarkenColor } from \"../../utilities/colorManipulator\";\r\n\r\ninterface CommitmentProps {\r\n  commitment: commitment;\r\n  color: string;\r\n}\r\n\r\n\r\nconst Commitment = (props: CommitmentProps) => {\r\n  return (\r\n    <Card\r\n      className={classes.card}\r\n      style={{ backgroundColor: LightenDarkenColor(props.color, 65) }}\r\n    >\r\n      <CardHeader\r\n        title={props.commitment.author}\r\n        subheader={formatTypes[props.commitment.format].displayName}\r\n        avatar={\r\n          <React.Fragment>\r\n            <Avatar src={formatTypes[props.commitment.format].image} />\r\n      \r\n          </React.Fragment>\r\n        }\r\n      />\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography>{props.commitment.description}</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Commitment;\r\n","import React from \"react\";\r\nimport { bite, biteTypes } from \"../../../models/models\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  IconButton,\r\n  CardHeader,\r\n  Avatar,\r\n  Chip\r\n} from \"@material-ui/core\";\r\nimport { ArrowUpward } from \"@material-ui/icons\";\r\nimport classes from \"./Bite.module.css\";\r\nimport Commitment from \"../../Commitment/Commitment\";\r\n\r\ninterface BiteProps {\r\n  bite: bite;\r\n}\r\n\r\nconst Bite = (props: BiteProps) => {\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        style={{ backgroundColor: biteTypes[props.bite.biteData.type].color }}\r\n        title={props.bite.biteData.title}\r\n        action={\r\n          <Chip className={classes.cardBackground} label={biteTypes[props.bite.biteData.type].displayName}/>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <Typography>\r\n          {props.bite.biteData.description}\r\n        </Typography>\r\n        {props.bite.biteData.commitment && <Commitment color={biteTypes[props.bite.biteData.type].color} commitment={props.bite.biteData.commitment}/>}\r\n      </CardContent>\r\n      <CardActions className={classes.upvoteContainer}>\r\n        <Avatar>\r\n          <span>{props.bite.biteData.upvotes}</span>\r\n        </Avatar>\r\n        <IconButton className={classes.upvoteButton}>\r\n          <ArrowUpward />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Bite;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Bite from \"./Bite/Bite\";\r\nimport { bite } from \"../../models/models\";\r\n\r\ninterface BiteProps {\r\n  bites: bite[];\r\n}\r\n\r\nconst sortBites = ( bites: bite[]) => {\r\n  var sorted =  bites.sort(function (biteA, biteB) {\r\n      let biteACommitment =  biteA.biteData.commitment !== undefined; \r\n      let biteBCommitment =  biteB.biteData.commitment !== undefined; \r\n      if (biteACommitment && biteBCommitment) {\r\n        if(biteA.biteData.upvotes >= biteB.biteData.upvotes){\r\n          return -1;\r\n        }\r\n        else{\r\n          return 1;\r\n        }\r\n      }\r\n      else if (!biteACommitment && !biteBCommitment) {\r\n        if(biteA.biteData.upvotes >= biteB.biteData.upvotes){\r\n          return -1;\r\n        }\r\n        else{\r\n          return 1;\r\n        }\r\n      }\r\n      else if(biteACommitment){\r\n        return -1;\r\n      }\r\n      else{\r\n        return 1;\r\n      }\r\n  });\r\n  return sorted;\r\n}\r\n\r\nconst Bites = (props: BiteProps) => {\r\n  let sortedBites = sortBites(props.bites);\r\n  console.log(sortedBites);\r\n  const bites =\r\n  sortedBites && sortedBites.length > 0\r\n      ? props.bites.map(bite => (\r\n          <Grid key={bite.id} item xs={3}>\r\n            <Bite bite={bite} />\r\n          </Grid>\r\n        ))\r\n      : null;\r\n  return (\r\n    <Grid container spacing={40}>\r\n      {bites}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Bites;\r\n","import React, { Component } from \"react\";\r\nimport DashboardLayout from \"../../../hoc/DashboardLayout/DashboardLayout\";\r\nimport { bite } from \"../../../models/models\";\r\nimport Bites from \"../../../components/Bites/Bites\";\r\nimport { GetAllBites } from \"../../../axios-firebase\";\r\n\r\ninterface KnowledgeWallState {\r\n  bites: bite[]\r\n}\r\nclass KnowledgeWall extends Component {\r\n  state: KnowledgeWallState = {\r\n    bites: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    GetAllBites().then(response =>{\r\n      this.setState({\"bites\": response});\r\n    });\r\n  }\r\n\r\n  render() {\r\n   console.log(this.props);\r\n    return (\r\n      <DashboardLayout>\r\n        { this.state.bites && this.state.bites.length > 0 && (\r\n          <Bites bites={this.state.bites} />\r\n        )}\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KnowledgeWall;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport KioskHome from \"./pages/Kiosk/KioskHome/KioskHome\";\nimport KnowledgeWall from \"./pages/Dashboard/KnowledgeWall/KnowledgeWall\";\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter basename=\"/knowledge-wall/\">\n        <Switch>\n          <Route path=\"/dashboard\" component={KnowledgeWall} />\n          <Route path=\"/kiosk\" component={KioskHome} />\n          <Redirect path=\"/k\" exact to=\"/kiosk\" />\n          <Redirect path=\"/\" exact to=\"/dashboard\" />\n          <Route render={() => <h1>404: Page Not Found</h1>} />\n        </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardLayout_root__2IbxT\",\"grow\":\"DashboardLayout_grow__21bLd\",\"menuButton\":\"DashboardLayout_menuButton__K6vV6\",\"contentContainer\":\"DashboardLayout_contentContainer__XgpIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"upvoteContainer\":\"Bite_upvoteContainer__2lXkz\",\"upvoteText\":\"Bite_upvoteText__SSo9q\",\"upvoteButton\":\"Bite_upvoteButton__2_0Ig\",\"cardBackground\":\"Bite_cardBackground__3koqe\"};"],"sourceRoot":""}